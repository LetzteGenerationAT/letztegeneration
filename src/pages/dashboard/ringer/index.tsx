import moment from "moment";
import { useSession } from "next-auth/react";
import TitleCard from "~/components/Card/TitleCard";
import { MODAL_BODY_TYPES } from "~/utils/globalConstantUtil";
import Layout from "~/components/Dashboard/Layout";
import { api } from "~/utils/api";
import EllipsisVerticalIcon from "@heroicons/react/24/outline/EllipsisVerticalIcon";
import { useBoundStore } from "~/store";
import { UserStatus, type User } from "@prisma/client";
import { useState } from "react";
import Select from "~/components/Input/Select";
import {
  type FieldValues,
  type SubmitHandler,
  useForm,
  FormProvider,
} from "react-hook-form";
import InputWithButton from "~/components/Input/InputWithButton";
import Input from "~/components/Input/Input";
import { GetStatus } from "~/components/Dashboard/Ringer/RingerStatus";

import UserGroupIcon from "@heroicons/react/24/outline/UserGroupIcon";
import UserPlusIcon from "@heroicons/react/24/outline/UserPlusIcon";
import CircleStackIcon from "@heroicons/react/24/outline/CircleStackIcon";
import CreditCardIcon from "@heroicons/react/24/outline/CreditCardIcon";
import UsersToBeRinged from "~/components/Dashboard/Ringer/UsersToBeRinged";
import Head from "next/head";
import DashboardStats from "~/components/Dashboard/Visuals/DashboardStats";
import LineChart from "~/components/Dashboard/Visuals/LineChart";
import BarChart from "~/components/Dashboard/Visuals/BarChart";
import AmountStats from "~/components/Dashboard/Visuals/AmountStats";
import PageStats from "~/components/Dashboard/Visuals/PageStats";
import UserChannels from "~/components/Dashboard/Visuals/UserChannels";
import RingerStats from "~/components/Dashboard/Ringer/RingerStats";

export default function Ringer() {
  const { data: sessionData } = useSession();

  const { data: newUsers } = api.user.countNewUsers.useQuery(undefined, {
    enabled: sessionData?.user !== undefined,
    onSuccess: (data: number) => data,
  });

  const { data: allUsers } = api.user.countAllUsers.useQuery(undefined, {
    enabled: sessionData?.user !== undefined,
    onSuccess: (data: number) => data,
  });

  const statsData = [
    {
      title: "Neue Aktivisti",
      value: newUsers,
      icon: <UserPlusIcon className="h-8 w-8" />,
      //   description: "letzte 24h",
    },
    {
      title: "Alle Aktivisti",
      value: allUsers,
      icon: <UserGroupIcon className="h-8 w-8" />,
      //   description: "Current month",
    },
  ];
  return (
    <>
      <Head>
        <title>Dashboard | Letzte Generation Ã–sterreich</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {/** ---------------------- Different stats content 1 ------------------------- */}
        <div className="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
          {statsData.map((d, k) => {
            return <RingerStats key={k} {...d} colorIndex={k} />;
          })}
        </div>

        {/** ---------------------- Different charts ------------------------- */}
        <div className="mt-6 grid gap-6 sm:grid-cols-1 lg:grid-cols-2">
          <LineChart />
          <BarChart />
        </div>

        {/** ---------------------- Different stats content 2 ------------------------- */}

        <div className="mt-6 grid gap-6 sm:grid-cols-1 lg:grid-cols-2">
          <AmountStats />
          <PageStats />
        </div>

        {/** ---------------------- User source channels table  ------------------------- */}
        <UserChannels />
      </Layout>
    </>
  );
}
