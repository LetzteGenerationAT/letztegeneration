import { zodResolver } from "@hookform/resolvers/zod";
import { signIn, useSession } from "next-auth/react";
import Head from "next/head";
import { FormProvider, type SubmitHandler, useForm } from "react-hook-form";
import { type LoginData } from "types";
import { z } from "zod";
import FormHeader from "~/components/Authentication/FormHeader";
import Layout from "~/components/Authentication/Layout";
import Input from "~/components/Input/Input";
import { type NextPage } from "next";
import router from "next/router";

const SignIn: NextPage = () => {
  const { data: sessionData } = useSession();

  const LOGIN_SCHEMA = z.object({
    email: z.string().email().min(1).max(255),
  });

  const methods = useForm({
    mode: "onTouched",
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call
    resolver: zodResolver(LOGIN_SCHEMA),
    defaultValues: {
      email: "",
    },
  });

  const { handleSubmit } = methods;

  const onSubmit: SubmitHandler<LoginData> = (data) => {
    void signIn("email", { email: data.email });
  };

  if (sessionData) {
    void router.push("/");
  }

  return (
    <>
      <Head>
        <title>Anmelden | Letzte Generation Ã–sterreich</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="flex flex-col items-center justify-center gap-4">
          <FormHeader title="Anmelden" />
          <FormProvider {...methods}>
            <form onSubmit={handleSubmit(onSubmit)} className="w-full">
              <div className="mb-4">
                <Input label="E-Mail Adresse" id="email" autocomplete="email" />
              </div>
              <button type="submit" className="btn-primary btn mt-2 w-full">
                Weiter
              </button>
            </form>
          </FormProvider>
        </div>
      </Layout>
    </>
  );
};

export default SignIn;
