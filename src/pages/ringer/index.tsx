import Head from "next/head";
import _ from "lodash";
import { type User } from "@prisma/client";
import { useSession } from "next-auth/react";
import { api } from "~/utils/api";
import Layout from "~/components/Dashboard/Layout";
import LineChart from "~/components/Dashboard/Visuals/LineChart";
import RingerStats from "~/components/Dashboard/Ringer/RingerStats";
import SimpleTable from "~/components/Dashboard/Visuals/SimpleTable";

import UserGroupIcon from "@heroicons/react/24/outline/UserGroupIcon";
import UserPlusIcon from "@heroicons/react/24/outline/UserPlusIcon";

export default function Ringer() {
  const { data: sessionData } = useSession();

  const { data: newUsersCount } = api.user.countNewUsers.useQuery(undefined, {
    enabled: sessionData?.user !== undefined,
    onSuccess: (data: number) => data,
  });

  const { data: allUsersCount } = api.user.countAllUsers.useQuery(undefined, {
    enabled: sessionData?.user !== undefined,
    onSuccess: (data: number) => data,
  });

  const { data: newlyRegisteredUsers } =
    api.user.getNewlyRegisteredUsers.useQuery(undefined, {
      enabled: sessionData?.user !== undefined,
      onSuccess: (data: User[]) => data,
    });

  return (
    <>
      <Head>
        <title>Dashboard | Letzte Generation Ã–sterreich</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {/** ---------------------- Different stats content 1 ------------------------- */}
        {/* <div className="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
          {statsData.map((d, k) => {
            return <RingerStats key={k} {...d} colorIndex={k} />;
          })}
        </div> */}
        <div className="grid grid-cols-1 gap-6 lg:grid-cols-2">
          <div className="grid grid-cols-1 gap-6 ">
            <RingerStats
              className="w-full"
              title={{ left: "Neue Aktivisti", right: "Aktivisti" }}
              value={{ left: newUsersCount ?? 0, right: allUsersCount ?? 0 }}
              icon={{
                left: <UserPlusIcon className="h-8 w-8" />,
                right: <UserGroupIcon className="h-8 w-8" />,
              }}
              colorIndex={0}
              description={{
                left: "letzte 24h",
                right: "insgesamt",
              }}
            />
            <SimpleTable
              title="Neue Aktivisti"
              data={
                _.map(newlyRegisteredUsers, (user) =>
                  _.pick(user, ["familyName", "givenName", "createdAt"])
                ) ?? []
              }
              columns={[
                { label: "Vorname", key: "givenName" },
                { label: "Nachname", key: "familyName" },
                { label: "Registriert am", key: "createdAt" },
              ]}
            />
          </div>
          <div className="grid grid-cols-1 gap-6 ">
            <LineChart />
            <LineChart />
          </div>
        </div>
      </Layout>
    </>
  );
}
