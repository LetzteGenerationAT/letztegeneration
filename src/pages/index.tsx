import { type NextPage } from "next";

import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { signIn, signOut, useSession } from "next-auth/react";

import { FormProvider, type SubmitHandler, useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";

import { api } from "~/utils/api";
import LandingIntro from "~/components/Authentication/LandingIntro";
import Input from "~/components/Input/Input";
import { type LoginData } from "types";
import FormHeader from "~/components/Authentication/FormHeader";
import Layout from "~/components/Authentication/Layout";

const Home: NextPage = () => {
  const { status } = useSession();
  const router = useRouter();

  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  if (status === "authenticated") {
    router.push("/dashboard");
  }

  if (status === "unauthenticated") {
    return (
      <>
        <Head>
          <title>Anmelden | Letzte Generation Österreich</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Layout>
          <SignIn />
        </Layout>
      </>
    );
  }

  return <div>Loading...</div>;
};

export default Home;

const SignIn: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  const LOGIN_SCHEMA = z.object({
    email: z.string().email().min(1).max(255),
  });

  const methods = useForm({
    mode: "onTouched",
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call
    resolver: zodResolver(LOGIN_SCHEMA),
    defaultValues: {
      email: "",
    },
  });
  const { handleSubmit } = methods;

  const onSubmit: SubmitHandler<LoginData> = (data) => {
    void signIn("email", { email: data.email });
  };

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <FormHeader title="Anmelden" />
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <FormProvider {...methods}>
        <form onSubmit={handleSubmit(onSubmit)} className="w-full">
          <div className="mb-4">
            <Input label="E-Mail Adresse" id="email" />
          </div>
          <button type="submit" className="btn-primary btn mt-2 w-full">
            Weiter
          </button>
        </form>
      </FormProvider>
    </div>
  );
};

{
  /* 
<main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
          <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
              Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
            </h1>
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
              <Link
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                href="https://create.t3.gg/en/usage/first-steps"
                target="_blank"
              >
                <h3 className="text-2xl font-bold">First Steps →</h3>
                <div className="text-lg">
                  Just the basics - Everything you need to know to set up your
                  database and authentication.
                </div>
              </Link>
              <Link
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                href="https://create.t3.gg/en/introduction"
                target="_blank"
              >
                <h3 className="text-2xl font-bold">Documentation →</h3>
                <div className="text-lg">
                  Learn more about Create T3 App, the libraries it uses, and how
                  to deploy it.
                </div>
              </Link>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="text-2xl text-white">
                {hello.data ? hello.data.greeting : "Loading tRPC query..."}
              </p>
              <AuthShowcase />
            </div>
          </div>
        </main> 
*/
}
